#访问端口号
server:
  port:
    8030
  servlet:
    context-path: /selfFrame

#数据库相关配置
spring:
  #应用名称
  application:
    name: self-frame
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    username: root
    password: root
  redis:
#    cluster:
#      nodes:
#        - 192.168.11.138:6380
#        - 192.168.11.138:6381
#        - 192.168.11.138:6382
#        - 192.168.11.138:6383
#        - 192.168.11.138:6384
#        - 192.168.11.138:6385
#      max-redirects: 3
    password: fuck
#    host: 192.168.197.130
    host: localhost
    port: 6379
  rabbitmq:
    host: localhost
    port: 5672
    username: root
    password: 123456
    virtual-host: /
  kafka:
    bootstrap-servers: 192.168.197.130:9092,192.168.197.130:9093,192.168.197.130:9094
    # 生产者
    producer:
      retries: 3 # 重新发送
      batch-size: 16384
      buffer-memory: 33554432
      acks: 1
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    # 消费者
    consumer:
      group-id: group01
      enable-auto-commit: false
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 500
    listener:
      # record 表示每一条记录被ListenerConsumer处理后提交
      # batch 表示每一批poll数据被ListenerConsumer处理后提交
      # time 表示一批poll数据被ListenerConsumer处理后，过了time的时间后开始提交
      # count 表示一批poll数据被ListenerConsumer处理后，被处理的record数量大于count数量后开始提交
      # count_time 表示count | time 满足一条即提交
      # manual 表示当一批poll数据被处理后，手动调用Acknowledgment.acknowledge()提交
      # manual_immediate 手动调用Acknowledgment.acknowledge()后立即提交，一般使用这个
      ack-mode: manual_immediate


mybatis:
  type-aliases-package: com.self.backend.domain
  configuration:
    logImpl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true
pagehelper:
  helperDialect: mysql
  offset-as-page-num: true
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
logging:
  level:
    root: INFO
  pattern:
    console: '%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger [%L]- %msg%n'
    file: '%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger [%L]- %msg%n'
  file:
    name: logs/data.log

self:
  cache:
    redis:
      expire: 60

eureka:
  client:
    service-url:
      defaultZone: http://localhost:1111/eureka/
  instance:
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    prefer-ip-address: true